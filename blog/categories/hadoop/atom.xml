<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Hadoop | Knowledge Mining]]></title>
  <link href="http://murraju.github.io/blog/categories/hadoop/atom.xml" rel="self"/>
  <link href="http://murraju.github.io/"/>
  <updated>2013-05-19T13:19:18-04:00</updated>
  <id>http://murraju.github.io/</id>
  <author>
    <name><![CDATA[Murali Raju]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JRuby, Kerberos and Hadoop HDFS]]></title>
    <link href="http://murraju.github.io/blog/2013/05/19/jruby/"/>
    <updated>2013-05-19T10:37:00-04:00</updated>
    <id>http://murraju.github.io/blog/2013/05/19/jruby</id>
    <content type="html"><![CDATA[<p>I needed to refactor existing functionality on hadooplib to support a secure cluster running kerberos. Starting with HDFS, the important items to make note are the following:</p>

<p>JRuby runtime classloader &ndash; setting conf.add_resource (&ldquo;path to hadoop xmls&rdquo;) does not work, since JRuby runtime does not load the correct classpaths. It appears you have to explicitly state the classloader:</p>

<p>```
jruby_class_loader = JRuby.runtime.getJRubyClassLoader
Java::java.lang.Thread.currentThread.setContextClassLoader(jruby_class_loader)</p>

<p>```</p>

<p>Add missing imports:</p>

<p>```
java_import org.apache.hadoop.security.UserGroupInformation</p>

<p>```</p>

<p>conf object:</p>

<p>```</p>

<h1>Parameters</h1>

<p>conf_dir =  params[&lsquo;hadoop_conf_dir&rsquo;] #path to HADOOP_CONF_DIR
principal = params[&lsquo;kerberos_principal&rsquo;] #kerberos principal to use
keytab_file = params[&lsquo;kerberos_keytab_file&rsquo;] #path to the keytab file to use</p>

<h1>Load Hadoop_CONF_DIR to make sure the .xml file are in the runtime path</h1>

<p>unless $CLASSPATH.include? conf_dir
  $CLASSPATH &lt;&lt; conf_dir
end</p>

<p>core_site = jruby_class_loader.getResource(&ldquo;core-site.xml&rdquo;)
hdfs_site = jruby_class_loader.getResource(&ldquo;hdfs-site.xml&rdquo;)</p>

<h1>Construct conf object</h1>

<p>conf = Configuration.new
conf.get(&lsquo;fs.default.name&rsquo;)
conf.set(&ldquo;hadoop.security.group.mapping&rdquo;,</p>

<pre><code>     "org.apache.hadoop.security.ShellBasedUnixGroupsMapping")
</code></pre>

<p>UserGroupInformation.setConfiguration(conf)</p>

<h1>Authenticate with kerberos</h1>

<p>UserGroupInformation.loginUserFromKeytab(principal, keytab_file)</p>

<h1>Get a FileSystem object to interogate HDFS</h1>

<p>fs=org.apache.hadoop.fs.FileSystem.get(conf)</p>

<p>```</p>

<p>Volla! The above are basic steps to migrate your existing JRuby/Hadoop code to work with kerberos. I hope to complete and add more functionality to hadooplib in the next few weeks.</p>
]]></content>
  </entry>
  
</feed>
